// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: copyfrom.go

package postgres

import (
	"context"
)

// iteratorForSaveOrderItems implements pgx.CopyFromSource.
type iteratorForSaveOrderItems struct {
	rows                 []SaveOrderItemsParams
	skippedFirstNextCall bool
}

func (r *iteratorForSaveOrderItems) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForSaveOrderItems) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].OrderItemID,
		r.rows[0].OrderID,
		r.rows[0].CreatedAt,
		r.rows[0].Name,
	}, nil
}

func (r iteratorForSaveOrderItems) Err() error {
	return nil
}

func (q *Queries) SaveOrderItems(ctx context.Context, arg []SaveOrderItemsParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"order_service", "order_item"}, []string{"order_item_id", "order_id", "created_at", "name"}, &iteratorForSaveOrderItems{rows: arg})
}
